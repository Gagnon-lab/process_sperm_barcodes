### script to make stacked area chart for all 7 time points from fish 6
setwd("/Users/andysposato/Desktop/kimberly/Sperm-Analysis")
library(ggplot2)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(gridExtra)
library(ggpubr)
library(data.table)
# load samples-info.csv as metadata
meta <- read.table("./data/samples-info.csv", header=TRUE, sep=",")
meta <- meta[order(meta$sample_id),]
# subset info for edited sperm samples from fish 6, split into rep 1 and rep 2
rep1.meta <- meta[which(meta$fish=="6" & meta$replicate==1),]
rep2.meta <- meta[which(meta$fish=="6" & meta$replicate==2),]
# load barcodes after filtering reads < 0.5% across all samples of interest
barcode.mat <- fread("./experiments/2021-11-22_mullerplots/barcodeMatrix_filterBelow0.005_wide.tsv", header=T, sep="\t")
# melt the data for ggplot
barcodes_long <- melt.data.table(barcode.mat,
id.vars = c("barcode"),
variable.name = "sample_id",
value.name = "count")
# remove NAs
barcodes_long <- barcodes_long[!is.na(count)]
# extract sample ids from fish 6, ordered chronologically
rep1.ids <- rep1.meta %>%
pull(sample_id) %>%
str_replace("-sperm", "_S")
rep2.ids <- rep2.meta %>%
pull(sample_id) %>%
str_replace("-sperm", "_S")
# subset dataframe to only include samples from fish 6 belonging to Rep 1 & Rep 2
rep1.df <- subset(barcodes_long, subset= sample_id %in% rep1.ids)
rep2.df <- subset(barcodes_long, subset= sample_id %in% rep2.ids)
# see all the classes of the variables
str(rep1.df)
rep1.df$barcode <- as.factor(rep1.df$barcode)
str(rep1.df)
rep2.df$barcode <- as.factor(rep2.df$barcode)
str(rep2.df)
# how many unique barcodes appeared at least once from fish 6?
fish6.df <- subset(barcodes_long, subset= sample_id %in% c(rep1.ids, rep2.ids))
fish6.df <- fish6.df[order(-fish6.df$count),]
nb.cols <- length(unique(fish6.df$barcode))
# calculate total reads for each sample in each rep (after filtering)
rep1.totals <- rep1.df %>%
group_by(sample_id) %>%
summarise(total=sum(count))
print(rep1.totals)
rep2.totals <- rep2.df %>%
group_by(sample_id) %>%
summarise(total=sum(count))
print(rep2.totals)
# make new column for clonal percentage/proportion
rep1.df <- merge(rep1.df, rep1.totals, by="sample_id")
rep1.df$proportion <- rep1.df$count/rep1.df$total
rep2.df <- merge(rep2.df, rep2.totals, by="sample_id")
rep2.df$proportion <- rep2.df$count/rep2.df$total
# a set of 21 distinct colors bc there are 21 unique barcodes
library(Polychrome)
P21 = createPalette(nb.cols,  c("#ff0000", "#00ff00", "#0000ff"))
swatch(P21)
cloneColors <- setNames(P21, unique(fish6.df$barcode))
# change order of labels so x axis is in forward time
rep1.df$sample_id <- factor(rep1.df$sample_id, levels=rep1.ids)
rep2.df$sample_id <- factor(rep2.df$sample_id, levels=rep2.ids)
# make the stacked area charts
# first by default stacking order in R
rep1_longIDs <- rep1.ids %>% str_replace("_S", "-sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "date"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
rep2_longIDs <- rep2.ids %>% str_replace("_S", "-sperm")
p2 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id %in% rep2_longIDs, "date"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15))
grid.arrange(p1,p2, nrow=1)
# now by sorting clones from largest to smallest
# this will sort it based on the first time point
rep1.df <- rep1.df %>% arrange(sample_id, -count)
rep1.df$barcode <- factor(rep1.df$barcode, levels=unique(rep1.df$barcode))
p3 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "date"]) +
labs(x= "") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=7, override.aes=list(size=4))
)
rep2.df <- rep2.df %>% arrange(sample_id, -count)
rep2.df$barcode <- factor(rep2.df$barcode, levels=unique(rep2.df$barcode))
p4 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id %in% rep2_longIDs, "date"]) +
labs(x= "") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=7, override.aes=list(size=4))
)
ggarrange(p3,p4,ncol=2, nrow=1, common.legend=TRUE, legend="bottom")
p1
p4
p2
ggarrange(p3,p4,ncol=2, nrow=1, common.legend=TRUE, legend="bottom")
setwd("/Users/andysposato/Desktop/jenna_sperm/SpermAnalysis_Muller1")
library(ggplot2)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(gridExtra)
library(ggpubr)
library(data.table)
library(Polychrome)
meta <- read.table("./data/samples-info.csv", header=TRUE, sep=",")
meta <- meta[order(meta$sample_id),]
View(meta)
View(meta)
# split into rep 1 and rep 2
rep1.meta <- meta[which(meta$fish=="1" & meta$replicate==1),]
rep2.meta <- meta[which(meta$fish=="1" & meta$replicate==2),]
rep3.meta <- meta[which(meta$fish=="1" & meta$replicate==3),]
View(rep1.meta)
View(rep2.meta)
View(rep3.meta)
barcode.mat <- fread("./experiments/Andy_test_9.9.24/barcodeMatrix_filterBelow0.005_wide.tsv", header=T, sep="\t")
barcodes_long <- melt.data.table(barcode.mat,
id.vars = c("barcode"),
variable.name = "sample_id",
value.name = "count")
View(barcode.mat)
barcodes_long <- barcodes_long[!is.na(count)]
# extract sample ids from fish 1, ordered chronologically
rep1.ids <- rep1.meta %>%
pull(sample_id)
rep2.ids <- rep2.meta %>%
pull(sample_id)
rep3.ids <- rep3.meta %>%
pull(sample_id)
rep1.df <- subset(barcodes_long, subset= sample_id %in% rep1.ids) # we are testing multiple criteria all at once
rep2.df <- subset(barcodes_long, subset= sample_id %in% rep2.ids)
rep3.df <- subset(barcodes_long, subset= sample_id %in% rep3.ids)
# see all the classes of the variables
str(rep1.df)
rep1.df$barcode <- as.factor(rep1.df$barcode)
str(rep1.df)
rep2.df$barcode <- as.factor(rep2.df$barcode)
str(rep2.df)
rep3.df$barcode <- as.factor(rep3.df$barcode)
str(rep3.df)
fish1.df <- subset(barcodes_long, subset= sample_id %in% c(rep1.ids, rep2.ids, rep3.ids))
fish1.df <- fish1.df[order(-fish1.df$count),]
# number unique barcodes determines number of colors needed in the muller plot - saved as nb.cols (number of colors)
nb.cols <- length(unique(fish1.df$barcode))
rep1.totals <- rep1.df %>% group_by(sample_id) %>%
summarise(total=sum(count))
print(rep1.totals)
rep2.totals <- rep2.df %>% group_by(sample_id) %>%
summarise(total=sum(count))
print(rep2.totals)
rep3.totals <- rep3.df %>% group_by(sample_id) %>%
summarise(total=sum(count))
print(rep3.totals)
rep1.df <- merge(rep1.df, rep1.totals, by="sample_id")
rep1.df$proportion <- rep1.df$count/rep1.df$total
rep2.df <- merge(rep2.df, rep2.totals, by="sample_id")
rep2.df$proportion <- rep2.df$count/rep2.df$total
rep3.df <- merge(rep3.df, rep3.totals, by="sample_id")
rep3.df$proportion <- rep3.df$count/rep3.df$total
nb.cols
P81 = createPalette(nb.cols,  c("#ff0000", "#00ff00", "#0000ff"))
swatch(P81)
cloneColors <- setNames(P81, unique(fish1.df$barcode))
rep1.df$sample_id <- factor(rep1.df$sample_id, levels=rep1.ids)
rep2.df$sample_id <- factor(rep2.df$sample_id, levels=rep2.ids)
rep3.df$sample_id <- factor(rep3.df$sample_id, levels=rep3.ids)
rep1_longIDs <- rep1.ids %>% str_replace("_s", "-sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
View(rep1.meta)
rep1_longIDs <- rep1.ids %>% str_replace("_s", "_sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
rep1.ids
rep1_longIDs
rep1_longIDs <- rep1.ids %>% str_replace("_s", "_sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
rep2_longIDs <- rep2.ids %>% str_replace("_s", "-sperm")
p2 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id %in% rep2_longIDs, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15))
rep1_longIDs <- rep1.ids %>% str_replace("_s", "_sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
rep2_longIDs <- rep2.ids %>% str_replace("_s", "-sperm")
p2 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15))
rep3_longIDs <- rep3.ids %>% str_replace("_s", "-sperm")
p3 <- ggplot(rep3.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep3.ids, labels=rep3.meta[rep3.meta$sample_id, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 3") +
theme(text=element_text(size=15))
grid.arrange(p1, p2, p3, nrow=1)
grid.arrange(p1, p2, p3, nrow=1)
p1
rep3_longIDs <- rep3.ids %>% str_replace("_s", "-sperm")
p3 <- ggplot(rep3.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep3.ids, labels=rep3.meta[rep3.meta$sample_id, "age"]) +
labs(x= "time") +
theme(legend.position="none") +
ggtitle("Replicate 3") +
theme(text=element_text(size=15))
p3
rep3_longIDs <- rep3.ids %>% str_replace("_s", "-sperm")
p3 <- ggplot(rep3.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep3.ids, labels=rep3.meta[rep3.meta$sample_id, "age"]) +
labs(x= " ") +
theme(legend.position="none") +
ggtitle("Replicate 3") +
theme(text=element_text(size=15))
p3
View(rep3.df)
View(rep3.df)
View(rep1.meta)
View(rep1.meta)
View(barcodes_long)
View(barcode.mat)
View(rep1.df)
View(meta)
View(fish1.df)
View(rep1.df)
View(rep1.df)
View(rep1.df)
View(rep1.totals)
View(barcodes_long)
View(meta)
View(rep1.meta)
View(rep2.meta)
View(rep2.meta)
View(rep2.meta)
p2
p1
rep1_longIDs <- rep1.ids %>% str_replace("_s", "_sperm")
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "age"])+
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
length(rep1.ids)
length(rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "age"])
p1 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id, "age"]) +
labs(x= "") +
theme(legend.position="none") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15))
p1
# now by sorting clones from largest to smallest
# based on the first time point
rep1.df <- rep1.df %>% arrange(sample_id, -count)
rep1.df$barcode <- factor(rep1.df$barcode, levels=unique(rep1.df$barcode))
p4 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id %in% rep1_longIDs, "age"]) +
labs(x= "") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
View(rep2.meta)
# now by sorting clones from largest to smallest
# based on the first time point
rep1.df <- rep1.df %>% arrange(sample_id, -count)
rep1.df$barcode <- factor(rep1.df$barcode, levels=unique(rep1.df$barcode))
p4 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
rep2.df <- rep2.df %>% arrange(sample_id, -count)
rep2.df$barcode <- factor(rep2.df$barcode, levels=unique(rep2.df$barcode))
p5 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
rep3.df <- rep3.df %>% arrange(sample_id, -count)
rep3.df$barcode <- factor(rep3.df$barcode, levels=unique(rep3.df$barcode))
p6 <- ggplot(rep3.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep3.ids, labels=rep3.meta[rep3.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 3") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
# now by sorting clones from largest to smallest
# based on the first time point
rep1.df <- rep1.df %>% arrange(sample_id, -count)
rep1.df$barcode <- factor(rep1.df$barcode, levels=unique(rep1.df$barcode))
p4 <- ggplot(rep1.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep1.ids, labels=rep1.meta[rep1.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 1") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
rep2.df <- rep2.df %>% arrange(sample_id, -count)
rep2.df$barcode <- factor(rep2.df$barcode, levels=unique(rep2.df$barcode))
p5 <- ggplot(rep2.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep2.ids, labels=rep2.meta[rep2.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 2") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
rep3.df <- rep3.df %>% arrange(sample_id, -count)
rep3.df$barcode <- factor(rep3.df$barcode, levels=unique(rep3.df$barcode))
p6 <- ggplot(rep3.df, aes(x=sample_id, y=proportion, fill=barcode, group=barcode)) +
geom_area() +
scale_fill_manual(values=cloneColors) +
scale_x_discrete(breaks=rep3.ids, labels=rep3.meta[rep3.meta$sample_id, "age"]) +
labs(x= "") +
ggtitle("Replicate 3") +
theme(text=element_text(size=15)) +
theme(
legend.position="bottom",
legend.title=element_blank(),
legend.text=element_text(size=9)
) +
guides(
fill=guide_legend(nrow=10, override.aes=list(size=4))
)
ggarrange(p4,p5,p6,ncol=2, nrow=1, common.legend=TRUE, legend="bottom")
ggarrange(p4,p5,p6,ncol=2, nrow=1, common.legend=TRUE, legend="bottom")
p6
p6 + NoLegend()
